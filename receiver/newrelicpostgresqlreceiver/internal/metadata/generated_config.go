// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
	"go.opentelemetry.io/collector/filter"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for newrelicpostgresql metrics.
type MetricsConfig struct {
	PostgresqlBackends                         MetricConfig `mapstructure:"postgresql.backends"`
	PostgresqlBgwriterBuffersAllocated         MetricConfig `mapstructure:"postgresql.bgwriter.buffers.allocated"`
	PostgresqlBgwriterBuffersWrites            MetricConfig `mapstructure:"postgresql.bgwriter.buffers.writes"`
	PostgresqlBgwriterCheckpointCount          MetricConfig `mapstructure:"postgresql.bgwriter.checkpoint.count"`
	PostgresqlBgwriterDuration                 MetricConfig `mapstructure:"postgresql.bgwriter.duration"`
	PostgresqlBgwriterMaxwritten               MetricConfig `mapstructure:"postgresql.bgwriter.maxwritten"`
	PostgresqlBlksHit                          MetricConfig `mapstructure:"postgresql.blks_hit"`
	PostgresqlBlksRead                         MetricConfig `mapstructure:"postgresql.blks_read"`
	PostgresqlBlockedSessionPid                MetricConfig `mapstructure:"postgresql.blocked.session.pid"`
	PostgresqlBlockingSessionDuration          MetricConfig `mapstructure:"postgresql.blocking.session.duration"`
	PostgresqlBlockingSessionPid               MetricConfig `mapstructure:"postgresql.blocking.session.pid"`
	PostgresqlBlockingSessionWaitEvent         MetricConfig `mapstructure:"postgresql.blocking.session.wait_event"`
	PostgresqlBlockingSessionWaitEventType     MetricConfig `mapstructure:"postgresql.blocking.session.wait_event_type"`
	PostgresqlBlocksHit                        MetricConfig `mapstructure:"postgresql.blocks_hit"`
	PostgresqlBlocksRead                       MetricConfig `mapstructure:"postgresql.blocks_read"`
	PostgresqlCommits                          MetricConfig `mapstructure:"postgresql.commits"`
	PostgresqlConnectionCount                  MetricConfig `mapstructure:"postgresql.connection.count"`
	PostgresqlConnectionMax                    MetricConfig `mapstructure:"postgresql.connection.max"`
	PostgresqlDatabaseCount                    MetricConfig `mapstructure:"postgresql.database.count"`
	PostgresqlDatabaseLocks                    MetricConfig `mapstructure:"postgresql.database.locks"`
	PostgresqlDbSize                           MetricConfig `mapstructure:"postgresql.db_size"`
	PostgresqlDeadlocks                        MetricConfig `mapstructure:"postgresql.deadlocks"`
	PostgresqlExecutionPlanActualLoops         MetricConfig `mapstructure:"postgresql.execution_plan.actual_loops"`
	PostgresqlExecutionPlanActualRows          MetricConfig `mapstructure:"postgresql.execution_plan.actual_rows"`
	PostgresqlExecutionPlanActualTotalTime     MetricConfig `mapstructure:"postgresql.execution_plan.actual_total_time"`
	PostgresqlExecutionPlanAsyncCapable        MetricConfig `mapstructure:"postgresql.execution_plan.async_capable"`
	PostgresqlExecutionPlanCostActual          MetricConfig `mapstructure:"postgresql.execution_plan.cost_actual"`
	PostgresqlExecutionPlanCostEstimate        MetricConfig `mapstructure:"postgresql.execution_plan.cost_estimate"`
	PostgresqlExecutionPlanIoReadTime          MetricConfig `mapstructure:"postgresql.execution_plan.io_read_time"`
	PostgresqlExecutionPlanIoWriteTime         MetricConfig `mapstructure:"postgresql.execution_plan.io_write_time"`
	PostgresqlExecutionPlanParallelAware       MetricConfig `mapstructure:"postgresql.execution_plan.parallel_aware"`
	PostgresqlExecutionPlanPlanRows            MetricConfig `mapstructure:"postgresql.execution_plan.plan_rows"`
	PostgresqlExecutionPlanPlanWidth           MetricConfig `mapstructure:"postgresql.execution_plan.plan_width"`
	PostgresqlExecutionPlanSharedHitBlocks     MetricConfig `mapstructure:"postgresql.execution_plan.shared_hit_blocks"`
	PostgresqlExecutionPlanSharedReadBlocks    MetricConfig `mapstructure:"postgresql.execution_plan.shared_read_blocks"`
	PostgresqlExecutionPlanSharedWrittenBlocks MetricConfig `mapstructure:"postgresql.execution_plan.shared_written_blocks"`
	PostgresqlExecutionPlanStartupTime         MetricConfig `mapstructure:"postgresql.execution_plan.startup_time"`
	PostgresqlExecutionPlanTempReadBlocks      MetricConfig `mapstructure:"postgresql.execution_plan.temp_read_blocks"`
	PostgresqlExecutionPlanTempWrittenBlocks   MetricConfig `mapstructure:"postgresql.execution_plan.temp_written_blocks"`
	PostgresqlIndexScans                       MetricConfig `mapstructure:"postgresql.index.scans"`
	PostgresqlIndexSize                        MetricConfig `mapstructure:"postgresql.index.size"`
	PostgresqlOperations                       MetricConfig `mapstructure:"postgresql.operations"`
	PostgresqlQueryAvgDiskReads                MetricConfig `mapstructure:"postgresql.query.avg_disk_reads"`
	PostgresqlQueryAvgDiskWrites               MetricConfig `mapstructure:"postgresql.query.avg_disk_writes"`
	PostgresqlQueryAvgElapsedTime              MetricConfig `mapstructure:"postgresql.query.avg_elapsed_time"`
	PostgresqlQueryCPUTime                     MetricConfig `mapstructure:"postgresql.query.cpu_time"`
	PostgresqlQueryExecutionCount              MetricConfig `mapstructure:"postgresql.query.execution.count"`
	PostgresqlReplicationDataDelay             MetricConfig `mapstructure:"postgresql.replication.data_delay"`
	PostgresqlRollbacks                        MetricConfig `mapstructure:"postgresql.rollbacks"`
	PostgresqlRows                             MetricConfig `mapstructure:"postgresql.rows"`
	PostgresqlSequentialScans                  MetricConfig `mapstructure:"postgresql.sequential_scans"`
	PostgresqlTableCount                       MetricConfig `mapstructure:"postgresql.table.count"`
	PostgresqlTableScans                       MetricConfig `mapstructure:"postgresql.table.scans"`
	PostgresqlTableSize                        MetricConfig `mapstructure:"postgresql.table.size"`
	PostgresqlTableVacuumCount                 MetricConfig `mapstructure:"postgresql.table.vacuum.count"`
	PostgresqlTempFiles                        MetricConfig `mapstructure:"postgresql.temp_files"`
	PostgresqlTupDeleted                       MetricConfig `mapstructure:"postgresql.tup_deleted"`
	PostgresqlTupFetched                       MetricConfig `mapstructure:"postgresql.tup_fetched"`
	PostgresqlTupInserted                      MetricConfig `mapstructure:"postgresql.tup_inserted"`
	PostgresqlTupReturned                      MetricConfig `mapstructure:"postgresql.tup_returned"`
	PostgresqlTupUpdated                       MetricConfig `mapstructure:"postgresql.tup_updated"`
	PostgresqlWaitEventTotalTime               MetricConfig `mapstructure:"postgresql.wait.event.total_time"`
	PostgresqlWalAge                           MetricConfig `mapstructure:"postgresql.wal.age"`
	PostgresqlWalDelay                         MetricConfig `mapstructure:"postgresql.wal.delay"`
	PostgresqlWalLag                           MetricConfig `mapstructure:"postgresql.wal.lag"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		PostgresqlBackends: MetricConfig{
			Enabled: true,
		},
		PostgresqlBgwriterBuffersAllocated: MetricConfig{
			Enabled: true,
		},
		PostgresqlBgwriterBuffersWrites: MetricConfig{
			Enabled: true,
		},
		PostgresqlBgwriterCheckpointCount: MetricConfig{
			Enabled: true,
		},
		PostgresqlBgwriterDuration: MetricConfig{
			Enabled: true,
		},
		PostgresqlBgwriterMaxwritten: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlksHit: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlksRead: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlockedSessionPid: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlockingSessionDuration: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlockingSessionPid: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlockingSessionWaitEvent: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlockingSessionWaitEventType: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlocksHit: MetricConfig{
			Enabled: true,
		},
		PostgresqlBlocksRead: MetricConfig{
			Enabled: true,
		},
		PostgresqlCommits: MetricConfig{
			Enabled: true,
		},
		PostgresqlConnectionCount: MetricConfig{
			Enabled: true,
		},
		PostgresqlConnectionMax: MetricConfig{
			Enabled: true,
		},
		PostgresqlDatabaseCount: MetricConfig{
			Enabled: true,
		},
		PostgresqlDatabaseLocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlDbSize: MetricConfig{
			Enabled: true,
		},
		PostgresqlDeadlocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanActualLoops: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanActualRows: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanActualTotalTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanAsyncCapable: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanCostActual: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanCostEstimate: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanIoReadTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanIoWriteTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanParallelAware: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanPlanRows: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanPlanWidth: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanSharedHitBlocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanSharedReadBlocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanSharedWrittenBlocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanStartupTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanTempReadBlocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlExecutionPlanTempWrittenBlocks: MetricConfig{
			Enabled: true,
		},
		PostgresqlIndexScans: MetricConfig{
			Enabled: true,
		},
		PostgresqlIndexSize: MetricConfig{
			Enabled: true,
		},
		PostgresqlOperations: MetricConfig{
			Enabled: true,
		},
		PostgresqlQueryAvgDiskReads: MetricConfig{
			Enabled: true,
		},
		PostgresqlQueryAvgDiskWrites: MetricConfig{
			Enabled: true,
		},
		PostgresqlQueryAvgElapsedTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlQueryCPUTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlQueryExecutionCount: MetricConfig{
			Enabled: true,
		},
		PostgresqlReplicationDataDelay: MetricConfig{
			Enabled: true,
		},
		PostgresqlRollbacks: MetricConfig{
			Enabled: true,
		},
		PostgresqlRows: MetricConfig{
			Enabled: true,
		},
		PostgresqlSequentialScans: MetricConfig{
			Enabled: true,
		},
		PostgresqlTableCount: MetricConfig{
			Enabled: true,
		},
		PostgresqlTableScans: MetricConfig{
			Enabled: true,
		},
		PostgresqlTableSize: MetricConfig{
			Enabled: true,
		},
		PostgresqlTableVacuumCount: MetricConfig{
			Enabled: true,
		},
		PostgresqlTempFiles: MetricConfig{
			Enabled: true,
		},
		PostgresqlTupDeleted: MetricConfig{
			Enabled: true,
		},
		PostgresqlTupFetched: MetricConfig{
			Enabled: true,
		},
		PostgresqlTupInserted: MetricConfig{
			Enabled: true,
		},
		PostgresqlTupReturned: MetricConfig{
			Enabled: true,
		},
		PostgresqlTupUpdated: MetricConfig{
			Enabled: true,
		},
		PostgresqlWaitEventTotalTime: MetricConfig{
			Enabled: true,
		},
		PostgresqlWalAge: MetricConfig{
			Enabled: true,
		},
		PostgresqlWalDelay: MetricConfig{
			Enabled: true,
		},
		PostgresqlWalLag: MetricConfig{
			Enabled: true,
		},
	}
}

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`
	// Experimental: MetricsInclude defines a list of filters for attribute values.
	// If the list is not empty, only metrics with matching resource attribute values will be emitted.
	MetricsInclude []filter.Config `mapstructure:"metrics_include"`
	// Experimental: MetricsExclude defines a list of filters for attribute values.
	// If the list is not empty, metrics with matching resource attribute values will not be emitted.
	// MetricsInclude has higher priority than MetricsExclude.
	MetricsExclude []filter.Config `mapstructure:"metrics_exclude"`

	enabledSetByUser bool
}

func (rac *ResourceAttributeConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(rac)
	if err != nil {
		return err
	}
	rac.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// ResourceAttributesConfig provides config for newrelicpostgresql resource attributes.
type ResourceAttributesConfig struct {
	PostgresqlDatabaseName ResourceAttributeConfig `mapstructure:"postgresql.database.name"`
	PostgresqlIndexName    ResourceAttributeConfig `mapstructure:"postgresql.index.name"`
	PostgresqlSchemaName   ResourceAttributeConfig `mapstructure:"postgresql.schema.name"`
	PostgresqlTableName    ResourceAttributeConfig `mapstructure:"postgresql.table.name"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{
		PostgresqlDatabaseName: ResourceAttributeConfig{
			Enabled: true,
		},
		PostgresqlIndexName: ResourceAttributeConfig{
			Enabled: true,
		},
		PostgresqlSchemaName: ResourceAttributeConfig{
			Enabled: true,
		},
		PostgresqlTableName: ResourceAttributeConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for newrelicpostgresql metrics builder.
type MetricsBuilderConfig struct {
	Metrics            MetricsConfig            `mapstructure:"metrics"`
	ResourceAttributes ResourceAttributesConfig `mapstructure:"resource_attributes"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics:            DefaultMetricsConfig(),
		ResourceAttributes: DefaultResourceAttributesConfig(),
	}
}
