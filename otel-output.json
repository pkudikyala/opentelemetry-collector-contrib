{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"20368"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"39299"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"3"}]}},{"name":"postgresql.execution_plan.async_capable","description":"Whether the execution plan node is async capable.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981159088000","asInt":"0"}]}},{"name":"postgresql.execution_plan.parallel_aware","description":"Whether the execution plan node is parallel aware.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981159088000","asInt":"0"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981157044000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981151436000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"1362"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752135981106107000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"20385"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"39306"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011144994000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011141350000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"1370"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136011105777000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"20398"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"39311"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041143179000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041139300000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"1378"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136041105557000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"20413"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"39318"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071145378000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071140975000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"1386"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136071105354000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"20426"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"39323"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101144066000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101139572000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"1394"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136101105296000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"20441"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"39330"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131153994000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131147575000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"1402"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136131105272000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"20454"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"39335"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161146675000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161142485000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"1410"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136161105097000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"20469"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"39342"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191153138000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191147679000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"1418"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136191104926000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"20482"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"39347"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221143185000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221139469000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"1426"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136221104741000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"20497"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"39354"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251144267000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251140397000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"1434"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136251104570000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"20510"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"39359"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281136408000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281132909000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"1442"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136281104397000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"20525"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"39366"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311144086000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311140107000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"1450"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136311104309000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"20538"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"39371"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341147993000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341143082000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"1458"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136341104119000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"20553"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"39378"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371144302000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371140536000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"1466"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136371103922000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"20566"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"39383"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"100"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"3"},{"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401135237000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401131487000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"1474"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752135980103383000","timeUnixNano":"1752136401103759000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
