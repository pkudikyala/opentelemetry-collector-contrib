{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"20720"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"39450"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"3"}]}},{"name":"postgresql.execution_plan.async_capable","description":"Whether the execution plan node is async capable.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730521950000","asInt":"0"}]}},{"name":"postgresql.execution_plan.parallel_aware","description":"Whether the execution plan node is parallel aware.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730521950000","asInt":"0"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730519010000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730515170000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"1562"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136730490175000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"20735"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"39455"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760514645000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760511060000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"1570"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136760490109000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"20750"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"39462"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790515382000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790511567000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"1578"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136790489979000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"20763"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"39467"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820531667000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820525825000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"1586"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136820489856000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"20778"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"39474"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850508651000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850505258000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"1594"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136850489715000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"20791"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"39479"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880516136000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880512265000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"1602"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136880489691000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"20806"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"39486"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910515563000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910511631000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"1610"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136910489544000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"20819"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"39491"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940517397000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940512634000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"1618"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136940489441000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"20834"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"39498"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970510515000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970507087000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"1626"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752136970489282000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"20849"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"39503"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":1504.572},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000513149000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"0f2f9613fe5539002a680dc6db8c4a48"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \n-- Create a table and lock it\nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\n-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\n-- This will keep the transaction open (we'll close it manually)\nSELECT 'Transaction started, table locked. Will sleep for 30 seconds to allow blocking test.';\nSELECT pg_sleep(30);\nCOMMIT;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000513149000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000508789000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"1635"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000489211000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.wait.event.total_time","description":"Total wait time for the wait event in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"unknown"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \n-- Create a table and lock it\nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\n-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\n-- This will keep the transaction open (we'll close it manually)\nSELECT 'Transaction started, table locked. Will sleep for 30 seconds to allow blocking test.';\nSELECT pg_sleep(30);\nCOMMIT;\n"}},{"key":"postgresql.wait.event.name","value":{"stringValue":"Timeout:PgSleep"}},{"key":"postgresql.wait.category","value":{"stringValue":"Other"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137000510777000","asDouble":19300.931}]}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"20870"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"39510"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":11014.523},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030512235000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"8370f3605d98902a9c881a1b04bdb863"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030512235000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030508392000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"1643"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030489112000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.wait.event.total_time","description":"Total wait time for the wait event in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"unknown"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}},{"key":"postgresql.wait.event.name","value":{"stringValue":"Timeout:PgSleep"}},{"key":"postgresql.wait.category","value":{"stringValue":"Other"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137030510024000","asDouble":3313.013}]}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.blocked.session.pid","description":"Process ID of the blocked session.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.text","value":{"stringValue":"\nUPDATE test_lock_table SET id = 2 WHERE id = 1;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060513604000","asInt":"16522"}]}},{"name":"postgresql.blocking.session.duration","description":"Duration for which the session has been blocking.","unit":"s","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.blocked.query.text","value":{"stringValue":"\nUPDATE test_lock_table SET id = 2 WHERE id = 1;\n"}},{"key":"postgresql.blocking.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060513604000","asDouble":26.250539}]}},{"name":"postgresql.blocking.session.pid","description":"Process ID of the blocking session.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060513604000","asInt":"16504"}]}},{"name":"postgresql.blocking.session.wait_event","description":"Wait event for the blocking session.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.blocked.query.text","value":{"stringValue":"\nUPDATE test_lock_table SET id = 2 WHERE id = 1;\n"}},{"key":"postgresql.blocking.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}},{"key":"postgresql.wait.event","value":{"stringValue":"transactionid"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060513604000","asInt":"1"}]}},{"name":"postgresql.blocking.session.wait_event_type","description":"Wait event type for the blocking session.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.blocked.query.text","value":{"stringValue":"\nUPDATE test_lock_table SET id = 2 WHERE id = 1;\n"}},{"key":"postgresql.blocking.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}},{"key":"postgresql.wait.event.type","value":{"stringValue":"Lock"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060513604000","asInt":"1"}]}},{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"20886"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"39515"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":11014.523},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060514421000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"29fb734db43622759b3a6d90ead73070"}},{"key":"postgresql.query.text","value":{"stringValue":"\nUPDATE test_lock_table SET id = 2 WHERE id = 1;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060514421000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"8370f3605d98902a9c881a1b04bdb863"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060514421000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060510420000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"1651"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060488986000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.wait.event.total_time","description":"Total wait time for the wait event in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"unknown"}},{"key":"postgresql.query.text","value":{"stringValue":"\nBEGIN; \nCREATE TABLE IF NOT EXISTS test_lock_table (id INTEGER PRIMARY KEY);\nINSERT INTO test_lock_table VALUES (1) ON CONFLICT DO NOTHING;\nUPDATE test_lock_table SET id = 1 WHERE id = 1;\nSELECT pg_sleep(60);\nCOMMIT;\n"}},{"key":"postgresql.wait.event.name","value":{"stringValue":"Timeout:PgSleep"}},{"key":"postgresql.wait.category","value":{"stringValue":"Other"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060512244000","asDouble":33315.296},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"unknown"}},{"key":"postgresql.query.text","value":{"stringValue":"\nUPDATE test_lock_table SET id = 2 WHERE id = 1;\n"}},{"key":"postgresql.wait.event.name","value":{"stringValue":"Lock:transactionid"}},{"key":"postgresql.wait.category","value":{"stringValue":"Locks"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137060512244000","asDouble":26249.026}]}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"20903"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"39522"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090510866000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090506563000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"1659"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137090488866000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"20916"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"39527"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120511901000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120507869000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"1668"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137120488801000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"20931"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"39534"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150518725000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150514509000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"1677"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137150488707000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"20944"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"39539"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180528821000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180522831000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"1686"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137180488589000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"20959"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"39546"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210522300000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210518108000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"1695"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137210488538000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"20972"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"39551"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240523470000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240519117000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"1704"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137240488398000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"20987"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"39558"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270522225000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270517330000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"1713"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137270488248000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"21000"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"39563"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300525155000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300520354000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"1722"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137300488208000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"21015"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"39570"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330525111000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330520865000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"1731"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137330488069000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"21028"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"39575"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"100"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"3"},{"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":23261.372},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":17646.179},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360512953000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360508631000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"1740"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752136729485661000","timeUnixNano":"1752137360464906000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
