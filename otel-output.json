{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"21893"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"39935"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"3"}]}},{"name":"postgresql.execution_plan.async_capable","description":"Whether the execution plan node is async capable.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.node.type","value":{"stringValue":"Function Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"ModifyTable"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"Index Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"}]}},{"name":"postgresql.execution_plan.cost_estimate","description":"Estimated cost of the execution plan node.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":5.02},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0.01},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.node.type","value":{"stringValue":"Function Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0.01},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0.01},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"ModifyTable"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":8.17},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"Index Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":8.17},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0.01}]}},{"name":"postgresql.execution_plan.parallel_aware","description":"Whether the execution plan node is parallel aware.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.node.type","value":{"stringValue":"Function Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"ModifyTable"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"Index Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"}]}},{"name":"postgresql.execution_plan.plan_rows","description":"Estimated number of rows to be processed by the execution plan node.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"1000"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.node.type","value":{"stringValue":"Function Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"ModifyTable"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"Index Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"1"}]}},{"name":"postgresql.execution_plan.plan_width","description":"Estimated width of rows to be processed by the execution plan node.","unit":"By","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.node.type","value":{"stringValue":"Function Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"4"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"ModifyTable"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"Index Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"10"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asInt":"4"}]}},{"name":"postgresql.execution_plan.startup_time","description":"Time taken to start the execution plan node in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"ProjectSet"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.node.type","value":{"stringValue":"Function Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"ModifyTable"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0.15},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.node.type","value":{"stringValue":"Index Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0.15},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.node.type","value":{"stringValue":"Result"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770223000","asDouble":0}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182770193000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182762505000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"2303"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139182715526000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"21914"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"39942"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212744874000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212741297000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"2308"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139212712158000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"21929"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"39947"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242755068000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242750982000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"2313"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139242710724000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"21942"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"39954"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272766482000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272759737000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"2318"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139272710262000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"21957"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"39959"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302747984000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302744104000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"2323"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139302709817000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"21970"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"39966"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332754017000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332749916000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"2328"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139332709530000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"21985"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"39971"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362742067000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362738652000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"2333"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139362709116000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"21999"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"39978"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392754385000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392750013000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"2339"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139392708841000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"22020"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"39983"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422747555000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422743590000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"2346"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139422708582000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"22038"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"39990"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452748038000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452742954000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"2352"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139452708238000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"22061"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"39995"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482756913000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482744690000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"2357"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139482707769000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"22076"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"40002"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512753798000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512745635000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"2362"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139512707474000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"22093"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"40007"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542746807000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542743056000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"2367"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139542707154000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"22106"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"40014"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572754331000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572746509000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"2372"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139572706859000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"22121"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"40019"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602748448000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602744537000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"2377"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139602706478000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"22134"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"40026"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632744580000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632740603000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"2382"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139632706116000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"22149"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"40031"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662747937000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662744128000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"2387"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139662705788000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"22162"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"40038"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692751186000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692746982000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"2392"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139692705544000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"22179"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"40043"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722741703000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722738263000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"2397"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139722705096000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"22192"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"40050"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752744595000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752740573000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"2402"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139752704755000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"22207"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"40055"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782739910000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782734619000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"2407"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139782704397000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"22222"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"40062"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"3"}]}},{"name":"postgresql.execution_plan.async_capable","description":"Whether the execution plan node is async capable.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Limit"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Aggregate"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Nested Loop"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Materialize"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"}]}},{"name":"postgresql.execution_plan.cost_estimate","description":"Estimated cost of the execution plan node.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Limit"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":282.96},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Aggregate"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":282.96},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Nested Loop"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":240.45},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":11.7},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Materialize"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":16.5},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":16}]}},{"name":"postgresql.execution_plan.parallel_aware","description":"Whether the execution plan node is parallel aware.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Limit"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Aggregate"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Nested Loop"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Materialize"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"}]}},{"name":"postgresql.execution_plan.plan_rows","description":"Estimated number of rows to be processed by the execution plan node.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Limit"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Aggregate"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Nested Loop"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"17000"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"170"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Materialize"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"100"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"100"}]}},{"name":"postgresql.execution_plan.plan_width","description":"Estimated width of rows to be processed by the execution plan node.","unit":"By","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Limit"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"12"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Aggregate"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"12"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Nested Loop"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Materialize"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asInt":"0"}]}},{"name":"postgresql.execution_plan.startup_time","description":"Time taken to start the execution plan node in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Limit"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":282.95},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Aggregate"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":282.95},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Nested Loop"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Materialize"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.node.type","value":{"stringValue":"Seq Scan"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745393000","asDouble":0}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812745372000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812741489000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"2412"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139812704155000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"22238"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"40067"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842749002000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842743022000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"2417"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139842703737000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"22251"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"40074"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872746382000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872742410000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"2422"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139872703430000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"22266"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"40079"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902756604000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902751249000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"2427"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139902703133000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"22279"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"40086"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932744342000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932740367000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"2432"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139932702830000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"22294"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"40091"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962745558000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962741605000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"2437"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139962702414000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"22307"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"40098"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992755274000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992747901000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"2442"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752139992702106000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
{"resourceMetrics":[{"resource":{},"scopeMetrics":[{"scope":{"name":"github.com/open-telemetry/opentelemetry-collector-contrib/receiver/newrelicpostgresqlreceiver","version":"0.129.0-dev"},"metrics":[{"name":"postgresql.commits","description":"The number of commits.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"22322"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"40103"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.connection.count","description":"Number of user connections.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"2"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"1"}]}},{"name":"postgresql.connection.max","description":"Maximum number of client connections allowed.","unit":"1","gauge":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"100"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"100"}]}},{"name":"postgresql.database.count","description":"Number of user databases.","unit":"1","sum":{"dataPoints":[{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"3"},{"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"3"}]}},{"name":"postgresql.query.avg_disk_reads","description":"Average number of disk reads per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":255},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":918},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":28},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":43}]}},{"name":"postgresql.query.avg_disk_writes","description":"Average number of disk writes per query execution.","unit":"1","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":24},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":0},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":6}]}},{"name":"postgresql.query.avg_elapsed_time","description":"Average execution time for the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":46705.434},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":35508.363},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":20014.432},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":8823.1},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":2007.928},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":1514.063},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":144.601},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":143.521},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":94.97},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":67.739},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":44.676},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":13.782},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asDouble":11.23}]}},{"name":"postgresql.query.cpu_time","description":"CPU time consumed by the query in milliseconds.","unit":"ms","gauge":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"9de2b22310490e3e53ca788f3ba250e1"}},{"key":"postgresql.query.text","value":{"stringValue":"\n\t\tSELECT \n\t\t\tCOALESCE(pss.queryid::text, md5(sa.query)) AS query_id,\n\t\t\tLEFT(sa.query, 4095) AS query_text,\n\t\t\tpd.datname AS database_name,\n\t\t\tmd5(sa.query || NOW()::text) AS plan_id,\n\t\t\t0 AS cpu_time_ms,\n\t\t\tEXTRACT(EPOCH FROM (NOW() - sa.query_start)) * 1000 AS exec_time_ms,\n\t\t\tsa.query AS real_query_text\n\t\tFROM \n\t\t\tpg_stat_activity sa\n\t\tLEFT JOIN \n\t\t\tpg_stat_statements pss ON pss.query = sa.query AND pss.dbid = sa.datid\n\t\tLEFT JOIN \n\t\t\tpg_database pd ON pd.oid = sa.datid\n\t\tWHERE \n\t\t\tpd.datname IN ('testdb', 'postgres')\n\t\t\tAND sa.query IS NOT NULL\n\t\t\tAND sa.query != ''\n\t\t\tAND sa.state = 'active'\n\t\t\tAND sa.query NOT LIKE 'EXPLAIN (FORMAT JSON) %'\n\t\tLIMIT 100"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022739926000","asDouble":0}]}},{"name":"postgresql.query.execution.count","description":"Number of times the query was executed.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"440101247839410938"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3404018605099167039"}},{"key":"postgresql.query.text","value":{"stringValue":"select * from pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2947340716630300180"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Keep the transaction open for blocking test\nUPDATE test_lock_table SET id = $1 WHERE id = $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"6"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"4536804317005561087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Force a slow query by using pg_sleep\nSELECT pg_sleep($1), COUNT(*) FROM users u CROSS JOIN posts p LIMIT $2"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"-3139757513735403281"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Generate a slow query with artificial delay to trigger collection\nSELECT \n    u.id,\n    u.name,\n    u.email,\n    pg_sleep($1) as sleep_result,\n    COUNT(o.id) as order_count,\n    SUM(o.total) as total_spent\nFROM \n    users u\nLEFT JOIN \n    orders o ON u.id = o.user_id\nWHERE \n    u.created_at \u003e= NOW() - INTERVAL $2\nGROUP BY \n    u.id, u.name, u.email\nORDER BY \n    total_spent DESC"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-8330292678256039428"}},{"key":"postgresql.query.text","value":{"stringValue":"DO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_proc WHERE proname = 'slow_calculation') THEN\n    PERFORM slow_calculation(50);\n  END IF;\nEND $$"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"7679276192979657576"}},{"key":"postgresql.query.text","value":{"stringValue":"SELECT slow_calculation($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"SELECT"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2920803561901199087"}},{"key":"postgresql.query.text","value":{"stringValue":"-- Create some slow queries to trigger slow query collection\nSELECT pg_sleep($1)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"3"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-7843470278038126227"}},{"key":"postgresql.query.text","value":{"stringValue":"ANALYZE"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"2572271098470785670"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE DATABASE test_monitoring"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}},{"key":"postgresql.query.id","value":{"stringValue":"2194329260438961401"}},{"key":"postgresql.query.text","value":{"stringValue":"-- This should be captured as a slow query now\nCREATE TEMP TABLE test_table AS SELECT generate_series(1,1000) as id"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}},{"key":"postgresql.query.id","value":{"stringValue":"-680770601819606026"}},{"key":"postgresql.query.text","value":{"stringValue":"CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n)"}},{"key":"postgresql.statement.type","value":{"stringValue":"OTHER"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022736168000","asInt":"1"}],"aggregationTemporality":2,"isMonotonic":true}},{"name":"postgresql.rollbacks","description":"The number of rollbacks.","unit":"1","sum":{"dataPoints":[{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"testdb"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"2447"},{"attributes":[{"key":"postgresql.database.name","value":{"stringValue":"postgres"}}],"startTimeUnixNano":"1752139181712786000","timeUnixNano":"1752140022701759000","asInt":"203"}],"aggregationTemporality":2,"isMonotonic":true}}]}]}]}
